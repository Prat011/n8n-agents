{
  "name": "🎯 Customer Lifetime Value Optimizer - Shopify",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "/customer-behavior",
        "options": {}
      },
      "id": "shopify-webhook",
      "name": "Customer Behavior Trigger",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [240, 300],
      "notes": "🔥 DEMO: Triggers on purchase, page view, email open\n💰 ROI: 25-40% LTV increase\n⚡ Impact: 3x better customer targeting"
    },
    {
      "parameters": {
        "url": "https://{{$credentials.shopify.shopName}}.myshopify.com/admin/api/2023-10/customers/{{$json.customer.id}}.json",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "shopifyApi",
        "options": {
          "queryParameters": {
            "parameters": [
              {
                "name": "fields",
                "value": "id,email,orders_count,total_spent,created_at,updated_at,last_order_id,tags"
              }
            ]
          }
        }
      },
      "id": "customer-data",
      "name": "📊 Get Customer History",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [460, 300],
      "notes": "Fetches complete customer purchase history\nRFM Analysis: Recency, Frequency, Monetary"
    },
    {
      "parameters": {
        "url": "https://{{$credentials.shopify.shopName}}.myshopify.com/admin/api/2023-10/customers/{{$json.customer.id}}/orders.json",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "shopifyApi",
        "options": {
          "queryParameters": {
            "parameters": [
              {
                "name": "limit",
                "value": "250"
              },
              {
                "name": "status",
                "value": "any"
              }
            ]
          }
        }
      },
      "id": "order-history",
      "name": "🛍️ Get Order Details",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [460, 420],
      "notes": "Detailed order analysis:\nProduct categories, seasonality, AOV trends"
    },
    {
      "parameters": {
        "model": "claude-3-5-sonnet-20241022",
        "prompt": "=You are a customer analytics expert. Analyze this customer data to calculate their Lifetime Value and create segmentation.\n\nCustomer Data: {{$node[\"customer-data\"].json.customer}}\nOrder History: {{$node[\"order-history\"].json.orders}}\nBehavior Event: {{$node[\"shopify-webhook\"].json}}\n\nAnalyze:\n1. RFM Score (Recency, Frequency, Monetary)\n2. Purchase patterns and seasonality\n3. Product category preferences\n4. Buying stage in customer journey\n5. Churn risk indicators\n6. Cross-sell/upsell opportunities\n\nCalculate:\n- Historical CLV\n- Predicted 12-month CLV\n- Customer segment (VIP, Loyal, At-Risk, New)\n- Engagement score (1-100)\n\nProvide JSON response with customer_id, clv_current, clv_predicted, segment, engagement_score, rfm_scores, recommendations, and next_best_actions.",
        "options": {
          "temperature": 0.2,
          "maxTokens": 2500
        }
      },
      "id": "clv-analysis",
      "name": "🧠 AI CLV Analysis",
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.3,
      "position": [680, 360],
      "notes": "🎯 AI analyzes customer behavior\n📊 Calculates CLV and segment\n🎲 Predicts future value and actions"
    },
    {
      "parameters": {
        "jsCode": "// Enhanced CLV calculation with ML features\nconst analysis = JSON.parse($input.first().json.choices[0].message.content);\nconst customerData = $node[\"customer-data\"].json.customer;\nconst orders = $node[\"order-history\"].json.orders;\n\n// Calculate additional ML features\nfunction calculateMLFeatures(orders) {\n  const now = new Date();\n  const orderDates = orders.map(o => new Date(o.created_at)).sort((a, b) => b - a);\n  \n  // Recency (days since last order)\n  const recency = orderDates.length > 0 ? Math.floor((now - orderDates[0]) / (1000 * 60 * 60 * 24)) : 9999;\n  \n  // Frequency (orders per month)\n  const frequency = orders.length / Math.max(1, (now - new Date(customerData.created_at)) / (1000 * 60 * 60 * 24 * 30));\n  \n  // AOV progression\n  const aovTrend = orders.length > 1 ? (orders.slice(0, 3).reduce((sum, o) => sum + parseFloat(o.total_price), 0) / 3) - \n                   (orders.slice(-3).reduce((sum, o) => sum + parseFloat(o.total_price), 0) / 3) : 0;\n  \n  // Category diversity\n  const categorySet = new Set();\n  orders.forEach(order => {\n    order.line_items?.forEach(item => {\n      if (item.product_type) categorySet.add(item.product_type);\n    });\n  });\n  \n  return {\n    recency,\n    frequency: frequency.toFixed(2),\n    monetary: parseFloat(customerData.total_spent || 0),\n    aov_trend: aovTrend.toFixed(2),\n    category_diversity: categorySet.size,\n    order_consistency: calculateConsistency(orderDates)\n  };\n}\n\nfunction calculateConsistency(dates) {\n  if (dates.length < 2) return 0;\n  const intervals = [];\n  for (let i = 1; i < dates.length; i++) {\n    intervals.push((dates[i-1] - dates[i]) / (1000 * 60 * 60 * 24));\n  }\n  const avgInterval = intervals.reduce((sum, i) => sum + i, 0) / intervals.length;\n  const variance = intervals.reduce((sum, i) => sum + Math.pow(i - avgInterval, 2), 0) / intervals.length;\n  return Math.max(0, 100 - Math.sqrt(variance) / avgInterval * 100);\n}\n\nconst mlFeatures = calculateMLFeatures(orders);\n\n// Enhanced segmentation logic\nlet segment = analysis.segment;\nlet priority = 'medium';\n\nif (mlFeatures.monetary > 1000 && mlFeatures.frequency > 2 && mlFeatures.recency < 60) {\n  segment = 'VIP';\n  priority = 'high';\n} else if (mlFeatures.recency > 180 && mlFeatures.monetary > 500) {\n  segment = 'At-Risk-VIP';\n  priority = 'urgent';\n} else if (mlFeatures.recency < 30 && orders.length === 1) {\n  segment = 'New-High-Intent';\n  priority = 'high';\n}\n\nconst result = {\n  customer_id: customerData.id,\n  email: customerData.email,\n  clv_current: mlFeatures.monetary,\n  clv_predicted: analysis.clv_predicted || mlFeatures.monetary * (mlFeatures.frequency * 12),\n  segment: segment,\n  priority: priority,\n  engagement_score: analysis.engagement_score || Math.min(100, mlFeatures.frequency * 20 + (100 - mlFeatures.recency/3)),\n  ml_features: mlFeatures,\n  rfm_scores: analysis.rfm_scores,\n  recommendations: analysis.recommendations,\n  next_actions: analysis.next_best_actions,\n  updated_at: new Date().toISOString()\n};\n\nreturn [{json: result}];"
      },
      "id": "ml-enhancement",
      "name": "🔬 ML Feature Engineering",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [900, 360],
      "notes": "🛡️ Enhanced ML calculations:\n• Purchase consistency scoring\n• Category diversity analysis\n• Behavioral trend prediction"
    },
    {
      "parameters": {
        "operation": "upsert",
        "table": "customer_clv_segments",
        "columns": "customer_id, email, clv_current, clv_predicted, segment, priority, engagement_score, rfm_recency, rfm_frequency, rfm_monetary, category_diversity, order_consistency, recommendations, next_actions, updated_at",
        "conflictColumns": "customer_id",
        "additionalFields": {
          "values": "={{$json.customer_id}}, '{{$json.email}}', {{$json.clv_current}}, {{$json.clv_predicted}}, '{{$json.segment}}', '{{$json.priority}}', {{$json.engagement_score}}, {{$json.ml_features.recency}}, {{$json.ml_features.frequency}}, {{$json.ml_features.monetary}}, {{$json.ml_features.category_diversity}}, {{$json.ml_features.order_consistency}}, '{{JSON.stringify($json.recommendations)}}', '{{JSON.stringify($json.next_actions)}}', '{{$json.updated_at}}'"
        }
      },
      "id": "clv-database",
      "name": "📊 Store CLV Data",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.4,
      "position": [1120, 360],
      "notes": "📈 Updates customer segments\n📊 ML feature store\n🔍 Analytics and reporting"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "high-value-customer",
              "leftValue": "={{$json.priority}}",
              "rightValue": "high,urgent",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            }
          ],
          "combineOperation": "any"
        },
        "options": {}
      },
      "id": "high-value-filter",
      "name": "💎 High-Value Customer?",
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2,
      "position": [1340, 360],
      "notes": "Identifies VIP and At-Risk-VIP customers for immediate action"
    },
    {
      "parameters": {
        "url": "https://a.klaviyo.com/api/profiles/",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Klaviyo-API-Key {{$credentials.klaviyo.apiKey}}"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "data",
              "value": "={\"type\": \"profile\", \"attributes\": {\"email\": \"{{$json.email}}\", \"properties\": {\"clv_current\": {{$json.clv_current}}, \"clv_predicted\": {{$json.clv_predicted}}, \"segment\": \"{{$json.segment}}\", \"engagement_score\": {{$json.engagement_score}}, \"priority\": \"{{$json.priority}}\"}}}"
            }
          ]
        }
      },
      "id": "klaviyo-update",
      "name": "📧 Update Email Segments",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [1560, 300],
      "notes": "✅ Updates Klaviyo customer profiles\n📈 Triggers personalized campaigns\n🎯 Segment-based automation"
    },
    {
      "parameters": {
        "url": "https://googleads.googleapis.com/v14/customers/{{$credentials.googleAds.customerId}}/customerLists/{{$credentials.googleAds.customerListId}}:mutateMembers",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "googleAdsApi",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "operations",
              "value": "=[{\"create\": {\"hashedEmail\": \"{{$json.email | hash('sha256')}}\", \"userIdentifiers\": [{\"hashedEmail\": \"{{$json.email | hash('sha256')}}\"}]}}]"
            }
          ]
        }
      },
      "id": "google-ads-audience",
      "name": "🎯 Update Ad Audiences",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [1560, 420],
      "notes": "✅ Updates Google Ads audiences\n📈 Lookalike audience optimization\n🎯 High-CLV customer targeting"
    },
    {
      "parameters": {
        "select": "channel",
        "channelId": {
          "__rl": true,
          "value": "C1234567890",
          "mode": "list",
          "cachedResultName": "clv-alerts"
        },
        "text": "=🎯 **Customer CLV Update**\n\n**Customer:** {{$json.email}}\n**Segment:** {{$json.segment}} ({{$json.priority}} priority)\n**Current CLV:** ${{$json.clv_current}}\n**Predicted CLV:** ${{$json.clv_predicted}}\n**Engagement Score:** {{$json.engagement_score}}/100\n\n**Next Actions:**\n{{$json.next_actions.slice(0,3).map(action => `• ${action}`).join('\\n')}}\n\n**Recommendations:**\n{{$json.recommendations.slice(0,2).map(rec => `• ${rec}`).join('\\n')}}\n\n_Automated by CLV Optimizer_",
        "otherOptions": {}
      },
      "id": "slack-notification",
      "name": "📱 Team Alert",
      "type": "n8n-nodes-base.slack",
      "typeVersion": 2.1,
      "position": [1780, 360],
      "notes": "🔔 High-value customer alerts\n📈 CLV insights and actions\n👥 Team coordination"
    }
  ],
  "connections": {
    "Customer Behavior Trigger": {
      "main": [
        [
          {
            "node": "📊 Get Customer History",
            "type": "main",
            "index": 0
          },
          {
            "node": "🛍️ Get Order Details",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "📊 Get Customer History": {
      "main": [
        [
          {
            "node": "🧠 AI CLV Analysis",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "🛍️ Get Order Details": {
      "main": [
        [
          {
            "node": "🧠 AI CLV Analysis",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "🧠 AI CLV Analysis": {
      "main": [
        [
          {
            "node": "🔬 ML Feature Engineering",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "🔬 ML Feature Engineering": {
      "main": [
        [
          {
            "node": "📊 Store CLV Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "📊 Store CLV Data": {
      "main": [
        [
          {
            "node": "💎 High-Value Customer?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "💎 High-Value Customer?": {
      "main": [
        [
          {
            "node": "📧 Update Email Segments",
            "type": "main",
            "index": 0
          },
          {
            "node": "🎯 Update Ad Audiences",
            "type": "main",
            "index": 0
          },
          {
            "node": "📱 Team Alert",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [
    {
      "createdAt": "2024-12-30T10:00:00.000Z",
      "updatedAt": "2024-12-30T10:00:00.000Z",
      "id": "customer-intelligence",
      "name": "Customer Intelligence"
    },
    {
      "createdAt": "2024-12-30T10:00:00.000Z",
      "updatedAt": "2024-12-30T10:00:00.000Z",
      "id": "high-roi",
      "name": "High ROI"
    }
  ],
  "triggerCount": 1,
  "updatedAt": "2024-12-30T10:00:00.000Z",
  "versionId": "1.0.0"
}