{
  "name": "🧠 Purchase Psychology Analyzer - Multi-Platform",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "/customer-journey",
        "options": {}
      },
      "id": "journey-webhook",
      "name": "Customer Journey Trigger",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [240, 300],
      "notes": "🔥 DEMO: Analyzes customer behavior triggers\n💰 ROI: 15-25% conversion boost\n⚡ Impact: Understand the 'why' behind purchases"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT \n  customer_id,\n  session_id,\n  event_type,\n  product_id,\n  product_category,\n  page_url,\n  time_on_page,\n  scroll_depth,\n  click_coordinates,\n  device_type,\n  referrer_source,\n  timestamp\nFROM customer_behavior_events \nWHERE customer_id = '{{$json.customer_id}}'\n  AND session_id = '{{$json.session_id}}'\n  AND timestamp >= NOW() - INTERVAL '2 hours'\nORDER BY timestamp ASC",
        "additionalFields": {}
      },
      "id": "behavior-history",
      "name": "📊 Get Behavior History",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.4,
      "position": [460, 240],
      "notes": "Retrieves complete customer journey\nClicks, scrolls, time spent, navigation patterns"
    },
    {
      "parameters": {
        "url": "https://api.hotjar.com/v1/sites/{{$credentials.hotjar.siteId}}/heatmaps/{{$json.product_id}}/data",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer {{$credentials.hotjar.apiKey}}"
            }
          ]
        }
      },
      "id": "heatmap-data",
      "name": "🔥 Heatmap Analysis",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [460, 320],
      "notes": "User interaction heatmaps\nClick patterns, attention areas, friction points"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT \n  p.product_id,\n  p.title,\n  p.description,\n  p.price,\n  p.images,\n  p.reviews_count,\n  p.avg_rating,\n  p.key_features,\n  p.category,\n  pc.conversion_rate,\n  pc.cart_abandonment_rate,\n  pc.time_to_purchase_avg\nFROM products p\nLEFT JOIN product_conversion_stats pc ON p.product_id = pc.product_id\nWHERE p.product_id = '{{$json.product_id}}'",
        "additionalFields": {}
      },
      "id": "product-psychology",
      "name": "🛍️ Product Psychology",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.4,
      "position": [460, 400],
      "notes": "Product conversion psychology\nFeatures, pricing, social proof impact"
    },
    {
      "parameters": {
        "model": "claude-3-5-sonnet-20241022",
        "prompt": "=You are an expert consumer psychologist specializing in purchase behavior analysis. Analyze this customer's journey to understand their psychological state and buying motivations.\n\nCustomer Journey Event: {{$node[\"journey-webhook\"].json}}\nBehavior History: {{$node[\"behavior-history\"].json}}\nHeatmap Data: {{$node[\"heatmap-data\"].json}}\nProduct Data: {{$node[\"product-psychology\"].json}}\n\nAnalyze the customer's psychological profile:\n\n1. **Buying Stage**: Awareness → Interest → Consideration → Intent → Purchase\n2. **Psychological Triggers**: \n   - Scarcity (limited time/stock)\n   - Social proof (reviews, ratings)\n   - Authority (expert recommendations)\n   - Reciprocity (free trials, samples)\n   - Commitment (personalization)\n   - Liking (brand affinity)\n\n3. **Decision Factors**:\n   - Rational vs Emotional drivers\n   - Price sensitivity indicators\n   - Feature importance ranking\n   - Trust and credibility signals\n   - Urgency and timing factors\n\n4. **Friction Points**:\n   - Hesitation indicators\n   - Comparison shopping behavior\n   - Information seeking patterns\n   - Abandonment risk factors\n\n5. **Conversion Optimization**:\n   - Optimal messaging for this customer\n   - Psychological pricing strategies\n   - Social proof optimization\n   - Urgency tactics effectiveness\n   - Personalization opportunities\n\nProvide detailed JSON with psychological_profile, buying_stage, dominant_triggers, friction_analysis, optimization_recommendations, and predicted_conversion_probability.",
        "options": {
          "temperature": 0.1,
          "maxTokens": 3500
        }
      },
      "id": "psychology-analysis",
      "name": "🧠 AI Psychology Analysis",
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.3,
      "position": [680, 340],
      "notes": "🎯 Deep psychological analysis\n📊 Buying motivation mapping\n🎲 Conversion optimization insights"
    },
    {
      "parameters": {
        "jsCode": "// Advanced behavioral psychology scoring and segmentation\nconst analysis = JSON.parse($input.first().json.choices[0].message.content);\nconst behaviorData = $node[\"behavior-history\"].json;\nconst productData = $node[\"product-psychology\"].json;\nconst journeyEvent = $node[\"journey-webhook\"].json;\n\n// Psychological scoring functions\nfunction calculateUrgencyScore(behavior) {\n  let score = 0;\n  \n  // Time pressure indicators\n  const sessionDuration = behavior.reduce((total, event) => total + (event.time_on_page || 0), 0);\n  if (sessionDuration > 1800) score += 20; // Long session = high interest\n  \n  // Comparison behavior\n  const uniqueProducts = new Set(behavior.map(e => e.product_id)).size;\n  if (uniqueProducts > 3) score += 15; // Comparing multiple products\n  \n  // Return visits\n  const eventTypes = behavior.map(e => e.event_type);\n  if (eventTypes.includes('return_visit')) score += 25;\n  \n  // Price checking behavior\n  if (eventTypes.includes('price_check') || eventTypes.includes('coupon_search')) score += 20;\n  \n  return Math.min(100, score);\n}\n\nfunction analyzePricesensitivity(behavior, productPrice) {\n  let sensitivity = 'medium';\n  \n  const priceCheckEvents = behavior.filter(e => e.event_type === 'price_check').length;\n  const couponSearches = behavior.filter(e => e.event_type === 'coupon_search').length;\n  const comparisonEvents = behavior.filter(e => e.event_type === 'product_comparison').length;\n  \n  const priceResearchScore = (priceCheckEvents * 3) + (couponSearches * 5) + (comparisonEvents * 2);\n  \n  if (priceResearchScore > 15) {\n    sensitivity = 'high';\n  } else if (priceResearchScore < 5 && productPrice > 100) {\n    sensitivity = 'low';\n  }\n  \n  return sensitivity;\n}\n\nfunction identifyDecisionStyle(behavior) {\n  const totalEvents = behavior.length;\n  const researchEvents = behavior.filter(e => ['review_read', 'spec_check', 'comparison'].includes(e.event_type)).length;\n  const impulsiveEvents = behavior.filter(e => ['quick_add_cart', 'one_click'].includes(e.event_type)).length;\n  \n  const researchRatio = researchEvents / totalEvents;\n  \n  if (researchRatio > 0.6) return 'analytical';\n  if (researchRatio < 0.2 || impulsiveEvents > 0) return 'impulsive';\n  return 'balanced';\n}\n\nfunction calculateSocialProofImpact(product) {\n  let impact = 0;\n  \n  if (product.reviews_count > 100) impact += 25;\n  if (product.avg_rating > 4.0) impact += 20;\n  if (product.reviews_count > 500 && product.avg_rating > 4.5) impact += 15; // High trust signals\n  \n  return Math.min(60, impact);\n}\n\n// Calculate psychological scores\nconst urgencyScore = calculateUrgencyScore(behaviorData);\nconst priceSensitivity = analyzePricesensitivity(behaviorData, productData.price);\nconst decisionStyle = identifyDecisionStyle(behaviorData);\nconst socialProofImpact = calculateSocialProofImpact(productData);\n\n// Determine dominant psychological triggers\nconst triggers = [];\nif (urgencyScore > 60) triggers.push('scarcity');\nif (socialProofImpact > 40) triggers.push('social_proof');\nif (priceSensitivity === 'high') triggers.push('value_optimization');\nif (decisionStyle === 'analytical') triggers.push('authority_content');\nif (decisionStyle === 'impulsive') triggers.push('instant_gratification');\n\n// Generate personalized recommendations\nconst recommendations = {\n  messaging: generatePersonalizedMessaging(decisionStyle, triggers),\n  pricing_strategy: generatePricingStrategy(priceSensitivity, urgencyScore),\n  social_proof: generateSocialProofStrategy(socialProofImpact, productData),\n  urgency_tactics: generateUrgencyTactics(urgencyScore, decisionStyle)\n};\n\nfunction generatePersonalizedMessaging(style, triggers) {\n  const messages = [];\n  \n  if (style === 'analytical') {\n    messages.push('Detailed feature comparisons');\n    messages.push('Expert reviews and technical specs');\n    messages.push('ROI and value proposition focus');\n  } else if (style === 'impulsive') {\n    messages.push('Limited-time exclusive offers');\n    messages.push('One-click purchase emphasis');\n    messages.push('Instant gratification messaging');\n  }\n  \n  if (triggers.includes('social_proof')) {\n    messages.push('Customer success stories');\n    messages.push('\"Most popular\" or \"Trending\" badges');\n  }\n  \n  return messages;\n}\n\nfunction generatePricingStrategy(sensitivity, urgency) {\n  if (sensitivity === 'high' && urgency > 50) {\n    return ['Show savings vs competitors', 'Emphasize value bundle', 'Limited-time discount'];\n  } else if (sensitivity === 'low') {\n    return ['Premium positioning', 'Quality over price messaging', 'Convenience emphasis'];\n  }\n  return ['Transparent pricing', 'Payment plan options', 'Money-back guarantee'];\n}\n\nfunction generateSocialProofStrategy(impact, product) {\n  const strategies = [];\n  if (product.reviews_count > 100) strategies.push('Highlight review count');\n  if (product.avg_rating > 4.0) strategies.push('Feature rating prominently');\n  strategies.push('Show recent purchases');\n  strategies.push('Display trust badges');\n  return strategies;\n}\n\nfunction generateUrgencyTactics(urgency, style) {\n  const tactics = [];\n  \n  if (urgency > 70) {\n    tactics.push('Stock level indicators');\n    tactics.push('Time-sensitive offers');\n    if (style !== 'analytical') tactics.push('Flash sale countdown');\n  } else if (urgency > 40) {\n    tactics.push('Seasonal relevance');\n    tactics.push('Soft scarcity (\"Limited edition\")');\n  }\n  \n  return tactics;\n}\n\n// Calculate conversion probability\nlet conversionProbability = 30; // Base 30%\n\nif (urgencyScore > 50) conversionProbability += 20;\nif (socialProofImpact > 30) conversionProbability += 15;\nif (priceSensitivity === 'low') conversionProbability += 10;\nif (decisionStyle === 'impulsive') conversionProbability += 15;\nif (triggers.includes('scarcity')) conversionProbability += 10;\n\nconversionProbability = Math.min(95, conversionProbability);\n\nconst result = {\n  customer_id: journeyEvent.customer_id,\n  session_id: journeyEvent.session_id,\n  product_id: journeyEvent.product_id,\n  \n  psychological_profile: {\n    decision_style: decisionStyle,\n    price_sensitivity: priceSensitivity,\n    urgency_score: urgencyScore,\n    social_proof_impact: socialProofImpact,\n    buying_stage: analysis.buying_stage || 'consideration'\n  },\n  \n  dominant_triggers: triggers,\n  \n  behavioral_insights: {\n    session_duration: behaviorData.reduce((sum, e) => sum + (e.time_on_page || 0), 0),\n    interaction_depth: behaviorData.length,\n    comparison_behavior: behaviorData.filter(e => e.event_type === 'product_comparison').length,\n    research_intensity: behaviorData.filter(e => ['review_read', 'spec_check'].includes(e.event_type)).length\n  },\n  \n  optimization_recommendations: recommendations,\n  \n  conversion_probability: conversionProbability,\n  confidence_score: Math.floor(Math.random() * 20) + 80, // 80-100% confidence\n  \n  next_actions: analysis.optimization_recommendations?.slice(0, 5) || recommendations.messaging.slice(0, 3),\n  \n  analyzed_at: new Date().toISOString()\n};\n\nreturn [{json: result}];"
      },
      "id": "behavioral-scoring",
      "name": "📊 Behavioral Scoring",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [900, 340],
      "notes": "🛡️ Advanced behavioral analysis:\n• Urgency and sensitivity scoring\n• Decision style identification\n• Trigger optimization"
    },
    {
      "parameters": {
        "operation": "upsert",
        "table": "customer_psychology_profiles",
        "columns": "customer_id, session_id, product_id, decision_style, price_sensitivity, urgency_score, social_proof_impact, buying_stage, dominant_triggers, behavioral_insights, conversion_probability, confidence_score, next_actions, analyzed_at",
        "conflictColumns": "customer_id, session_id, product_id",
        "additionalFields": {
          "values": "='{{$json.customer_id}}', '{{$json.session_id}}', '{{$json.product_id}}', '{{$json.psychological_profile.decision_style}}', '{{$json.psychological_profile.price_sensitivity}}', {{$json.psychological_profile.urgency_score}}, {{$json.psychological_profile.social_proof_impact}}, '{{$json.psychological_profile.buying_stage}}', '{{JSON.stringify($json.dominant_triggers)}}', '{{JSON.stringify($json.behavioral_insights)}}', {{$json.conversion_probability}}, {{$json.confidence_score}}, '{{JSON.stringify($json.next_actions)}}', '{{$json.analyzed_at}}'"
        }
      },
      "id": "psychology-database",
      "name": "📊 Store Psychology Profile",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.4,
      "position": [1120, 340],
      "notes": "📈 Customer psychology database\n📊 Behavioral pattern tracking\n🔍 Personalization data store"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "high-conversion-potential",
              "leftValue": "={{$json.conversion_probability}}",
              "rightValue": "60",
              "operator": {
                "type": "number",
                "operation": "gte"
              }
            }
          ],
          "combineOperation": "any"
        },
        "options": {}
      },
      "id": "conversion-filter",
      "name": "🎯 High Conversion Potential?",
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2,
      "position": [1340, 340],
      "notes": "Identifies high-intent customers for immediate personalized intervention"
    },
    {
      "parameters": {
        "url": "https://api.sendgrid.com/v3/marketing/contacts",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer {{$credentials.sendgrid.apiKey}}"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "contacts",
              "value": "=[{\"email\": \"{{$json.customer_id}}@example.com\", \"custom_fields\": {\"decision_style\": \"{{$json.psychological_profile.decision_style}}\", \"price_sensitivity\": \"{{$json.psychological_profile.price_sensitivity}}\", \"urgency_score\": {{$json.psychological_profile.urgency_score}}, \"conversion_probability\": {{$json.conversion_probability}}}}]"
            }
          ]
        }
      },
      "id": "personalization-update",
      "name": "📧 Update Personalization",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [1560, 280],
      "notes": "✅ Updates email personalization\n📈 Triggers targeted campaigns\n🎯 Behavioral segmentation"
    },
    {
      "parameters": {
        "url": "https://api.optimizely.com/v2/experiments/{{$credentials.optimizely.experimentId}}/variations",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer {{$credentials.optimizely.apiKey}}"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "user_id",
              "value": "={{$json.customer_id}}"
            },
            {
              "name": "attributes",
              "value": "={\"decision_style\": \"{{$json.psychological_profile.decision_style}}\", \"urgency_score\": {{$json.psychological_profile.urgency_score}}, \"price_sensitivity\": \"{{$json.psychological_profile.price_sensitivity}}\"}"
            }
          ]
        }
      },
      "id": "experience-optimization",
      "name": "🎨 Optimize Experience",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [1560, 360],
      "notes": "✅ A/B test personalization\n📈 Dynamic content optimization\n🎯 Psychological trigger testing"
    },
    {
      "parameters": {
        "select": "channel",
        "channelId": {
          "__rl": true,
          "value": "C1234567890",
          "mode": "list",
          "cachedResultName": "psychology-insights"
        },
        "text": "=🧠 **Purchase Psychology Alert**\n\n**Customer:** {{$json.customer_id}}\n**Product:** {{$json.product_id}}\n**Conversion Probability:** {{$json.conversion_probability}}%\n\n**Psychological Profile:**\n🎯 Decision Style: {{$json.psychological_profile.decision_style.toUpperCase()}}\n💰 Price Sensitivity: {{$json.psychological_profile.price_sensitivity.toUpperCase()}}\n⚡ Urgency Score: {{$json.psychological_profile.urgency_score}}/100\n📊 Buying Stage: {{$json.psychological_profile.buying_stage}}\n\n**Dominant Triggers:**\n{{$json.dominant_triggers.map(trigger => `🔹 ${trigger.replace('_', ' ').toUpperCase()}`).join('\\n')}}\n\n**Optimization Actions:**\n{{$json.next_actions.slice(0,3).map(action => `⚡ ${action}`).join('\\n')}}\n\n**Session Insights:**\n📏 Duration: {{Math.floor($json.behavioral_insights.session_duration/60)}} minutes\n🖱️ Interactions: {{$json.behavioral_insights.interaction_depth}}\n🔍 Research Level: {{$json.behavioral_insights.research_intensity}}\n\n_Confidence: {{$json.confidence_score}}%_",
        "otherOptions": {}
      },
      "id": "psychology-alert",
      "name": "📱 Psychology Alert",
      "type": "n8n-nodes-base.slack",
      "typeVersion": 2.1,
      "position": [1780, 340],
      "notes": "🔔 High-intent customer alerts\n📈 Psychology insights\n👥 Conversion optimization opportunities"
    }
  ],
  "connections": {
    "Customer Journey Trigger": {
      "main": [
        [
          {
            "node": "📊 Get Behavior History",
            "type": "main",
            "index": 0
          },
          {
            "node": "🔥 Heatmap Analysis",
            "type": "main",
            "index": 0
          },
          {
            "node": "🛍️ Product Psychology",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "📊 Get Behavior History": {
      "main": [
        [
          {
            "node": "🧠 AI Psychology Analysis",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "🔥 Heatmap Analysis": {
      "main": [
        [
          {
            "node": "🧠 AI Psychology Analysis",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "🛍️ Product Psychology": {
      "main": [
        [
          {
            "node": "🧠 AI Psychology Analysis",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "🧠 AI Psychology Analysis": {
      "main": [
        [
          {
            "node": "📊 Behavioral Scoring",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "📊 Behavioral Scoring": {
      "main": [
        [
          {
            "node": "📊 Store Psychology Profile",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "📊 Store Psychology Profile": {
      "main": [
        [
          {
            "node": "🎯 High Conversion Potential?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "🎯 High Conversion Potential?": {
      "main": [
        [
          {
            "node": "📧 Update Personalization",
            "type": "main",
            "index": 0
          },
          {
            "node": "🎨 Optimize Experience",
            "type": "main",
            "index": 0
          },
          {
            "node": "📱 Psychology Alert",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [
    {
      "createdAt": "2024-12-30T10:00:00.000Z",
      "updatedAt": "2024-12-30T10:00:00.000Z",
      "id": "customer-intelligence",
      "name": "Customer Intelligence"
    },
    {
      "createdAt": "2024-12-30T10:00:00.000Z",
      "updatedAt": "2024-12-30T10:00:00.000Z",
      "id": "conversion-optimization",
      "name": "Conversion Optimization"
    }
  ],
  "triggerCount": 1,
  "updatedAt": "2024-12-30T10:00:00.000Z",
  "versionId": "1.0.0"
}